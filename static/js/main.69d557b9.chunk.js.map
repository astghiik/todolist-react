{"version":3,"sources":["components/header/Header.jsx","components/toDoList/ToDoList.jsx","App.js","serviceWorker.js","index.js"],"names":["Header","props","_this","Object","classCallCheck","this","possibleConstructorReturn","getPrototypeOf","call","handleChange","e","setState","itemValue","target","value","handleAddButtonClick","state","addItemToList","handleEnterKey","event","keyCode","document","addEventListener","classes","react_default","a","createElement","className","appHeader","Typography_default","variant","style","margin","Input_default","input","type","onChange","placeholder","Button_default","color","onClick","Component","withStyles","marginBottom","marginLeft","width","ToDoList","handleRemoveButtonClick","removeItemFromList","currentTarget","dataset","item","handleDoneItems","parentElement","classList","toggle","done","children","hiddenItem","_this2","list","toDoList","map","key","todoItem","itemRow","CheckBox_default","marginTop","CheckBoxOutlineBlank_default","itemCheckBox","Tooltip_default","title","itemText","Delete_default","data-item","delIcon","display","flexDirection","justifyContent","padding","&:hover","backgroundColor","borderRadius","position","cursor","overflow","whiteSpace","verticalAlign","visibility","left","top","textDecoration","App","itemForAdd","trim","indexOf","push","itemForRemove","splice","header_Header","toDoList_ToDoList","Boolean","window","location","hostname","match","ReactDOM","render","src_App_0","getElementById","navigator","serviceWorker","ready","then","registration","unregister"],"mappings":"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","file":"static/js/main.69d557b9.chunk.js","sourcesContent":["import React, { Component } from 'react';\r\nimport { withStyles } from '@material-ui/core/styles';\r\nimport Typography from '@material-ui/core/Typography';\r\nimport Button from '@material-ui/core/Button';\r\nimport Input from '@material-ui/core/Input';\r\n\r\n\r\nconst styles = () => ({\r\n    appHeader: {\r\n        marginBottom: '25px',\r\n        marginLeft: '35px'\r\n    },\r\n    input: {\r\n        width: \"400px\"\r\n    }\r\n});\r\n\r\nclass Header extends Component {\r\n    constructor(props) {\r\n        super(props);\r\n        this.state = {\r\n            itemValue: ''\r\n        };\r\n    }\r\n\r\n    handleChange = e => {\r\n        this.setState({ itemValue: e.target.value });\r\n    }\r\n\r\n    handleAddButtonClick = () => {\r\n        const { itemValue } = this.state;\r\n\r\n        // this.props.toDoList.push(itemValue);\r\n        this.props.addItemToList(itemValue);\r\n        this.setState({ itemValue: '' });\r\n    }\r\n\r\n    handleEnterKey = (event) => {\r\n        if (event.keyCode === 13) this.handleAddButtonClick();\r\n    }\r\n\r\n    componentDidMount() {\r\n        document.addEventListener('keydown', this.handleEnterKey);\r\n    }\r\n    \r\n\r\n    render () {\r\n        const { classes } = this.props;\r\n        return (\r\n            <div className={classes.appHeader}>\r\n                <Typography variant=\"h3\" style={{margin: '0 0 50px 105px'}}>To-Do List</Typography>\r\n                <Input className={classes.input} type='text' onChange={this.handleChange} value={this.state.itemValue} placeholder='what next?' />\r\n                <Button color=\"primary\" onClick={this.handleAddButtonClick}>\r\n                    Add\r\n                </Button>\r\n                \r\n            </div>\r\n        );\r\n    }\r\n}\r\n\r\nexport default withStyles(styles)(Header);","import React, { Component } from 'react';\r\nimport DeleteIcon from '@material-ui/icons/Delete';\r\nimport CheckBoxOutlineBlank from '@material-ui/icons/CheckBoxOutlineBlank';\r\nimport CheckBox from '@material-ui/icons/CheckBox';\r\nimport Tooltip from '@material-ui/core/Tooltip';\r\nimport { withStyles } from '@material-ui/core';\r\n\r\nconst styles = () => ({\r\n    todoItem: {\r\n        display: 'flex',\r\n        flexDirection: 'row',\r\n        justifyContent: 'space-between',\r\n        padding: '5px',\r\n        '&:hover': {\r\n            backgroundColor: \"#F4F1F1\",\r\n            borderRadius: '5px'\r\n          },\r\n    },\r\n\r\n    itemRow: {\r\n        width: \"500px\",\r\n        position: 'relative',\r\n        cursor: 'pointer',\r\n        overflow: 'hidden',\r\n        whiteSpace: 'nowrap',\r\n    },\r\n\r\n    itemText: {\r\n        verticalAlign: 'super',\r\n        marginLeft: '5px',\r\n        width: '430px',\r\n    },\r\n\r\n    hiddenItem: {\r\n        visibility: \"hidden\",\r\n    },\r\n\r\n    itemCheckBox: {\r\n        position: 'absolute',\r\n        left: '0',\r\n        top: '9%'\r\n    },\r\n\r\n    done: {\r\n        textDecoration: \"line-through\",\r\n        borderRadius: '5px',\r\n        backgroundColor: \"#F4F1F1\",\r\n    },\r\n\r\n    delIcon: {\r\n        cursor: 'pointer',\r\n        marginTop: '4px',\r\n        '&:hover': {\r\n            backgroundColor: \"#ff7979\",\r\n            borderRadius: '15px'\r\n        },   \r\n    },\r\n})\r\n\r\nclass ToDoList extends Component {\r\n\r\n    handleRemoveButtonClick = (e) => {\r\n        this.props.removeItemFromList(e.currentTarget.dataset.item);\r\n    }\r\n\r\n    handleDoneItems = (e) => {\r\n        e.currentTarget.parentElement.classList.toggle(this.props.classes.done);\r\n        e.currentTarget.children[0].classList.toggle(this.props.classes.hiddenItem);\r\n        e.currentTarget.children[1].classList.toggle(this.props.classes.hiddenItem);\r\n    }\r\n\r\n\r\n    render () {\r\n        const { classes } = this.props;\r\n        \r\n        const list = this.props.toDoList.map(item => \r\n            <div  key={item} className={classes.todoItem}>\r\n                <div onClick={this.handleDoneItems} className={classes.itemRow}>\r\n                    <CheckBox className={classes.hiddenItem} style={{marginTop: '3px'}} />\r\n                    <CheckBoxOutlineBlank className={classes.itemCheckBox} />\r\n                    <Tooltip title={item}>\r\n                      <span className={classes.itemText}>{item}</span>\r\n                    </Tooltip>\r\n                </div>\r\n                <DeleteIcon onClick={this.handleRemoveButtonClick} data-item={item} className={classes.delIcon}/>\r\n            </div>\r\n        );\r\n\r\n        return (\r\n            <div>\r\n                {list}\r\n            </div>\r\n        );\r\n    }\r\n}\r\n\r\nexport default withStyles(styles)(ToDoList);","import React, { Component } from 'react';\nimport './App.css';\nimport Header from './components/header/Header';\nimport ToDoList from './components/toDoList/ToDoList';\n\nclass App extends Component {\n  constructor(props) {\n    super(props);\n    this.state = {\n      toDoList: []\n    };\n  }\n  \n  addItemToList = (itemForAdd) => {\n    const { toDoList } = this.state;\n    if (itemForAdd.trim() && toDoList.indexOf(itemForAdd.trim()) === -1) {\n      toDoList.push(itemForAdd);\n      this.setState({ toDoList });\n    }\n  }\n\n  removeItemFromList = (itemForRemove) => {\n    const { toDoList } = this.state;\n    toDoList.splice(toDoList.indexOf(itemForRemove), 1);\n    this.setState({ toDoList });\n  }\n\n  render() {\n    return (\n      <div className=\"App\">\n        <Header addItemToList={this.addItemToList} />\n        <ToDoList toDoList={this.state.toDoList} removeItemFromList={this.removeItemFromList} />\n      </div>\n    );\n  }\n}\n\nexport default App;","// This optional code is used to register a service worker.\n// register() is not called by default.\n\n// This lets the app load faster on subsequent visits in production, and gives\n// it offline capabilities. However, it also means that developers (and users)\n// will only see deployed updates on subsequent visits to a page, after all the\n// existing tabs open on the page have been closed, since previously cached\n// resources are updated in the background.\n\n// To learn more about the benefits of this model and instructions on how to\n// opt-in, read http://bit.ly/CRA-PWA\n\nconst isLocalhost = Boolean(\n  window.location.hostname === 'localhost' ||\n    // [::1] is the IPv6 localhost address.\n    window.location.hostname === '[::1]' ||\n    // 127.0.0.1/8 is considered localhost for IPv4.\n    window.location.hostname.match(\n      /^127(?:\\.(?:25[0-5]|2[0-4][0-9]|[01]?[0-9][0-9]?)){3}$/\n    )\n);\n\nexport function register(config) {\n  if (process.env.NODE_ENV === 'production' && 'serviceWorker' in navigator) {\n    // The URL constructor is available in all browsers that support SW.\n    const publicUrl = new URL(process.env.PUBLIC_URL, window.location.href);\n    if (publicUrl.origin !== window.location.origin) {\n      // Our service worker won't work if PUBLIC_URL is on a different origin\n      // from what our page is served on. This might happen if a CDN is used to\n      // serve assets; see https://github.com/facebook/create-react-app/issues/2374\n      return;\n    }\n\n    window.addEventListener('load', () => {\n      const swUrl = `${process.env.PUBLIC_URL}/service-worker.js`;\n\n      if (isLocalhost) {\n        // This is running on localhost. Let's check if a service worker still exists or not.\n        checkValidServiceWorker(swUrl, config);\n\n        // Add some additional logging to localhost, pointing developers to the\n        // service worker/PWA documentation.\n        navigator.serviceWorker.ready.then(() => {\n          console.log(\n            'This web app is being served cache-first by a service ' +\n              'worker. To learn more, visit http://bit.ly/CRA-PWA'\n          );\n        });\n      } else {\n        // Is not localhost. Just register service worker\n        registerValidSW(swUrl, config);\n      }\n    });\n  }\n}\n\nfunction registerValidSW(swUrl, config) {\n  navigator.serviceWorker\n    .register(swUrl)\n    .then(registration => {\n      registration.onupdatefound = () => {\n        const installingWorker = registration.installing;\n        if (installingWorker == null) {\n          return;\n        }\n        installingWorker.onstatechange = () => {\n          if (installingWorker.state === 'installed') {\n            if (navigator.serviceWorker.controller) {\n              // At this point, the updated precached content has been fetched,\n              // but the previous service worker will still serve the older\n              // content until all client tabs are closed.\n              console.log(\n                'New content is available and will be used when all ' +\n                  'tabs for this page are closed. See http://bit.ly/CRA-PWA.'\n              );\n\n              // Execute callback\n              if (config && config.onUpdate) {\n                config.onUpdate(registration);\n              }\n            } else {\n              // At this point, everything has been precached.\n              // It's the perfect time to display a\n              // \"Content is cached for offline use.\" message.\n              console.log('Content is cached for offline use.');\n\n              // Execute callback\n              if (config && config.onSuccess) {\n                config.onSuccess(registration);\n              }\n            }\n          }\n        };\n      };\n    })\n    .catch(error => {\n      console.error('Error during service worker registration:', error);\n    });\n}\n\nfunction checkValidServiceWorker(swUrl, config) {\n  // Check if the service worker can be found. If it can't reload the page.\n  fetch(swUrl)\n    .then(response => {\n      // Ensure service worker exists, and that we really are getting a JS file.\n      const contentType = response.headers.get('content-type');\n      if (\n        response.status === 404 ||\n        (contentType != null && contentType.indexOf('javascript') === -1)\n      ) {\n        // No service worker found. Probably a different app. Reload the page.\n        navigator.serviceWorker.ready.then(registration => {\n          registration.unregister().then(() => {\n            window.location.reload();\n          });\n        });\n      } else {\n        // Service worker found. Proceed as normal.\n        registerValidSW(swUrl, config);\n      }\n    })\n    .catch(() => {\n      console.log(\n        'No internet connection found. App is running in offline mode.'\n      );\n    });\n}\n\nexport function unregister() {\n  if ('serviceWorker' in navigator) {\n    navigator.serviceWorker.ready.then(registration => {\n      registration.unregister();\n    });\n  }\n}\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport './index.css';\nimport App from './App';\nimport * as serviceWorker from './serviceWorker';\n\nReactDOM.render(<App />, document.getElementById('root'));\n\n// If you want your app to work offline and load faster, you can change\n// unregister() to register() below. Note this comes with some pitfalls.\n// Learn more about service workers: http://bit.ly/CRA-PWA\nserviceWorker.unregister();\n"],"sourceRoot":""}